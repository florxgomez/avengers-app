{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","images.js","Scroll.js","ErrorBoundry.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","name","avenger","src","react_default","a","createElement","className","alt","height","width","CardList","_ref","images","map","i","src_Card","key","SearchBox","searchChange","type","placeholder","onChange","id","Scroll","style","overflowY","paddingTop","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","e","searchField","target","value","_this$state","filteredAvengers","filter","image","toLowerCase","includes","length","border","src_SearchBox","Scroll_Scroll","src_ErrorBoundry","src_CardList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c101d127.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst { name, avenger, src } = props;\n\treturn (\n\t\t<div className ='tc card dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='' src={src} height='300' width='200'/>\n\t\t\t<div>\n\t\t\t\t<h2 className='white'>{avenger}</h2>\n\t\t\t\t<p className='white'>{name}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ images }) => {\n  return (\n    <div>\n      {images.map((avenger, i) => {\n        return (\n          <Card\n            key={i}\n            name={images[i].name}\n            avenger={images[i].avenger}\n            src={images[i].src}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t<input \n\t\t\tclassName='pa3 ba b--silver bg-light-gray' \n\t\t\ttype='search' \n\t\t\tplaceholder='search Avenger'\n\t\t\tonChange={searchChange}/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","export const images = [\n  { id: 1, src: './avengers/ant-man.jpg', avenger:'Ant Man', name:'Paul Rudd'},\n  { id: 2, src: './avengers/black-panther.jpg', avenger:'Black Panter', name:'Chadwick Boseman'},\n  { id: 3, src: './avengers/black-widow.jpg', avenger:'Black Widow', name:'Scarlett Johansson'},\n  { id: 4, src: './avengers/captain-america.jpg', avenger:'Captain America', name:'Chris Evans'},\n  { id: 5, src: './avengers/captain-marvel.jpg', avenger:'Captain Marvel', name:'Brie Larson'},\n  { id: 6, src: './avengers/dr-strange.jpg', avenger:'Dr. Strange', name:'Benedict Cumberbatch'},\n  { id: 7, src: './avengers/drax.jpg', avenger:'Drax', name:'Dave Bautista'},\n  { id: 8, src: './avengers/falcon.jpg', avenger:'Falcon', name:'Anthony Mackie'},\n  { id: 9, src: './avengers/gamora.jpg', avenger:'Gamora', name:'Zoe SaldaÃ±a'},\n  { id: 10, src: './avengers/groot.jpg', avenger:'Groot', name:'Vin Diesel'},\n  { id: 11, src: './avengers/hawkeye.jpg', avenger:'Hawkeye', name:'Jeremy Renner'},\n  { id: 12, src: './avengers/hulk.jpg', avenger:'Hulk', name:'Mark Ruffalo'},\n  { id: 13, src: './avengers/iron-man.jpg', avenger:'Iron Man', name:'Robert Downey Jr.'},\n  { id: 14, src: './avengers/loki.jpg', avenger:'Loki', name:'Tom Hiddleston'},\n  { id: 15, src: './avengers/nebula.jpg', avenger:'Nebula', name:'Karen Gillan'},\n  { id: 16, src: './avengers/rocket.jpg', avenger:'Rocket', name:'Bradley Cooper'},\n  { id: 17, src: './avengers/scarlet-witch.jpg', avenger:'Scarlet Witch', name:'Elizabeth Olsen'},\n  { id: 18, src: './avengers/spiderman.jpg', avenger:'Spiderman', name:'Tom Holland'},\n  { id: 19, src: './avengers/star-lord.jpg', avenger:'Star Lord', name:'Chris Pratt'},\n  { id: 20, src: './avengers/thor.jpg', avenger:'Thor', name:'Chris Hemsworth'},\n  { id: 21, src: './avengers/war-machine.jpg', avenger:'War Machine', name:'Don Cheadle'},\n  { id: 22, src: './avengers/winter-soldier.jpg', avenger:'Winter Soldier', name:'Sebastian Stan'}\n];","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div style={{ overflowY: \"scroll\", height: \"800px\", paddingTop: \"10px\" }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport { Scroll };\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError) {\r\n      return <h1>Oooops. That is no good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from \"./SearchBox\";\nimport { images } from \"./images\";\nimport { Scroll } from \"./Scroll\";\nimport ErrorBoundry from \"./ErrorBoundry\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n      searchField: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ images: images });\n  }\n\n  onSearchChange = e => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { images, searchField } = this.state;\n    const filteredAvengers = images.filter(image => {\n      return (\n        image.avenger.toLowerCase().includes(searchField.toLowerCase()) ||\n        image.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    });\n    return !images.length ? (\n      <h1>Loading...</h1>\n    ) : (\n      <div className=\"tc\">\n        <img\n          className=\"pt2\"\n          src=\"https://fontmeme.com/permalink/190518/ac068f97191bc097a0ae3494c6ec34fe.png\"\n          alt=\"avengers-infinity-war-font\"\n          border=\"0\"\n        />\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList images={filteredAvengers} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}